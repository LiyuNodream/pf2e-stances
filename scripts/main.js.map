{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/stances.ts","webpack:///./src/sheet.ts","webpack:///./src/main.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocument) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { getSourceId } from '@utils/foundry/flags'\r\n\r\ntype StanceData = { feat: ItemUUID; effect: ItemUUID; replace?: ItemUUID }\r\ntype ReturnedStance = { name: string; img: string; effectUUID: ItemUUID; effectID: string }\r\n\r\nconst STANCES: StanceData[] = [\r\n    {\r\n        // Arcane Cascade\r\n        feat: 'Compendium.pf2e.classfeatures.09iL38CZZEa0q0Mt',\r\n        effect: 'Compendium.pf2e.feat-effects.fsjO5oTKttsbpaKl',\r\n    },\r\n    {\r\n        // Buckler Dance\r\n        feat: 'Compendium.pf2e.feats-srd.tDWc2LQNl0Op1Auq',\r\n        effect: 'Compendium.pf2e-stances.effects.PS17dsXkTdQmOv7w',\r\n    },\r\n    {\r\n        // Cobra Stance\r\n        feat: 'Compendium.pf2e.feats-srd.AkV4Jyllo6nlK2Sl',\r\n        effect: 'Compendium.pf2e.feat-effects.CgxYa0lrLUjS2ZhI',\r\n    },\r\n    {\r\n        // Cobra Stance (Envenom)\r\n        feat: 'Compendium.pf2e.feats-srd.xQuNswWB3eg1UM28',\r\n        effect: 'Compendium.pf2e.feat-effects.2Qpt0CHuOMeL48rN',\r\n        replace: 'Compendium.pf2e.feats-srd.AkV4Jyllo6nlK2Sl', // Cobra Stance\r\n    },\r\n    {\r\n        // Crane Stance\r\n        feat: 'Compendium.pf2e.feats-srd.bf7NCeKqDClaqhTR',\r\n        effect: 'Compendium.pf2e.feat-effects.nwkYZs6YwXYAJ4ps',\r\n    },\r\n    {\r\n        // Disarm Stance\r\n        feat: 'Compendium.pf2e.feats-srd.1p5ErCp33nGOzEsk',\r\n        effect: 'Compendium.pf2e.feat-effects.LxSev4GNKv26DbZw',\r\n    },\r\n    {\r\n        // Disruptive Stance\r\n        feat: 'Compendium.pf2e.feats-srd.OEGhbRgW6wRbccns',\r\n        effect: 'Compendium.pf2e-stances.effects.qBR3kqGCeKp3T2Be',\r\n    },\r\n    {\r\n        // Dragon Stance\r\n        feat: 'Compendium.pf2e.feats-srd.8sy3sHwOHS4ImwvJ',\r\n        effect: 'Compendium.pf2e.feat-effects.qUowHpn79Dpt1hVn',\r\n    },\r\n    {\r\n        // Dread Marshal Stance\r\n        feat: 'Compendium.pf2e.feats-srd.R7c4PyTNkZb0yvoT',\r\n        effect: 'Compendium.pf2e.feat-effects.KBEJVRrie2JTHWIK',\r\n    },\r\n    {\r\n        // Dueling Dance (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.FYz5eQeTox9IDkSd',\r\n        effect: 'Compendium.pf2e.feat-effects.KiuBRoMFxL2Npt51',\r\n    },\r\n    {\r\n        // Dueling Dance (Swashbuckler)\r\n        feat: 'Compendium.pf2e.feats-srd.9VGmE7X4aK2W8YWj',\r\n        effect: 'Compendium.pf2e.feat-effects.KiuBRoMFxL2Npt51',\r\n    },\r\n    {\r\n        // Everstand Stance\r\n        feat: 'Compendium.pf2e.feats-srd.6GN1zh3RcnZhrzxP',\r\n        effect: 'Compendium.pf2e.feat-effects.GGebXpRPyONZB3eS',\r\n    },\r\n    {\r\n        // Fane's Fourberie\r\n        feat: 'Compendium.pf2e.feats-srd.80CEAB05TP5ki9iW',\r\n        effect: 'Compendium.pf2e-stances.effects.GvqB4M8LrHpzYEvl',\r\n    },\r\n    {\r\n        // Gorilla Stance\r\n        feat: 'Compendium.pf2e.feats-srd.DqD7htz8Sd1dh3BT',\r\n        effect: 'Compendium.pf2e.feat-effects.RozqjLocahvQWERr',\r\n    },\r\n    {\r\n        // Gorilla Stance (Pound)\r\n        feat: 'Compendium.pf2e.feats-srd.nRjyyDulHnP5OewA',\r\n        effect: 'Compendium.pf2e.feat-effects.UZKIKLuwpQu47feK',\r\n        replace: 'Compendium.pf2e.feats-srd.DqD7htz8Sd1dh3BT',\r\n    },\r\n    {\r\n        // Graceful Poise\r\n        feat: 'Compendium.pf2e.feats-srd.rFaUJtB46scuAidY',\r\n        effect: 'Compendium.pf2e-stances.effects.mark4VEQoynfYNBF',\r\n    },\r\n    {\r\n        // Impassable Wall Stance\r\n        feat: 'Compendium.pf2e.feats-srd.YeyOqNFKaeuOTiJr',\r\n        effect: 'Compendium.pf2e-stances.effects.zzC2qZwEKf4Ja3xD',\r\n    },\r\n    {\r\n        // Inspiring Marshal Stance\r\n        feat: 'Compendium.pf2e.feats-srd.bvOsJNeI0ewvQsFa',\r\n        effect: 'Compendium.pf2e.feat-effects.kzEPq4aczYb6OD2h',\r\n    },\r\n    {\r\n        // Ironblood Stance\r\n        feat: 'Compendium.pf2e.feats-srd.x9cYkB8DrUBBwqJd',\r\n        effect: 'Compendium.pf2e.feat-effects.tPKXLtDJ3bzJcXlv',\r\n    },\r\n    {\r\n        // Jellyfish Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Jwq5o13uZF3ooln1',\r\n        effect: 'Compendium.pf2e.feat-effects.pkcr9w5x6bKzl3om',\r\n    },\r\n    {\r\n        // Lunging Stance\r\n        feat: 'Compendium.pf2e.feats-srd.ZghzLmYgeE19GqjP',\r\n        effect: 'Compendium.pf2e-stances.effects.W8CKuADdbODpBh6O',\r\n    },\r\n    {\r\n        // Masquerade of Seasons Stance\r\n        feat: 'Compendium.pf2e.feats-srd.KMVXUgFArcftg1jQ',\r\n        effect: 'Compendium.pf2e.feat-effects.6IsZQpwRJQWIzdGx',\r\n    },\r\n    {\r\n        // Mobile Shot Stance\r\n        feat: 'Compendium.pf2e.feats-srd.rByA8NDI6ZtNgBeT',\r\n        effect: 'Compendium.pf2e-stances.effects.NWOmJ6WJFheaGhho',\r\n    },\r\n    {\r\n        // Monastic Archer Stance\r\n        feat: 'Compendium.pf2e.feats-srd.YG2RxXE9SMfwo6wP',\r\n        effect: 'Compendium.pf2e.feat-effects.1dxD3xsTzak6GNj5',\r\n    },\r\n    {\r\n        // Mountain Stance\r\n        feat: 'Compendium.pf2e.feats-srd.ZL5UU9quCTvcWzfY',\r\n        effect: 'Compendium.pf2e.feat-effects.gYpy9XBPScIlY93p',\r\n    },\r\n    {\r\n        // Multishot Stance\r\n        feat: 'Compendium.pf2e.feats-srd.RzhnxgiAopWILCvs',\r\n        effect: 'Compendium.pf2e.feat-effects.l4QUaedYofnfXig0',\r\n    },\r\n    {\r\n        // Paragon's Guard\r\n        feat: 'Compendium.pf2e.feats-srd.hPDerDCYmag3s0dP',\r\n        effect: 'Compendium.pf2e.feat-effects.6EDoy3OSFZ4L3Vs7',\r\n    },\r\n    {\r\n        // Peafowl Stance\r\n        feat: 'Compendium.pf2e.feats-srd.C3MgEkPNaIhTddbr',\r\n        effect: 'Compendium.pf2e.feat-effects.vjvcccAwdkOLA1Fc',\r\n    },\r\n    {\r\n        // Point-Blank Shot\r\n        feat: 'Compendium.pf2e.feats-srd.Yl2wYv24v5kw95aS',\r\n        effect: 'Compendium.pf2e.feat-effects.9HPxAKpP3WJmICBx',\r\n    },\r\n    {\r\n        // Powder Punch Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Ziky4XVV7syXVbUg',\r\n        effect: 'Compendium.pf2e-stances.effects.kDTiRg9vVOYNnTyr',\r\n    },\r\n    {\r\n        // Push Back the Dead!\r\n        feat: 'Compendium.pf2e.feats-srd.BtZJJClWCpc31Ven',\r\n        effect: 'Compendium.pf2e.feat-effects.OeZ0E1oUKyGPxPy0',\r\n    },\r\n    {\r\n        // Rain of Embers Stance\r\n        feat: 'Compendium.pf2e.feats-srd.rbiMK71SvGZGRLJ1',\r\n        effect: 'Compendium.pf2e.feat-effects.Im5JBInybWFbHEYS',\r\n    },\r\n    {\r\n        // Reflective Ripple Stance\r\n        feat: 'Compendium.pf2e.feats-srd.knZUN4sYExIyRC4F',\r\n        effect: 'Compendium.pf2e.feat-effects.QDQwHxNowRwzUx9R',\r\n    },\r\n    {\r\n        // Ricochet Stance (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.tRHjUCl0xqG97nok',\r\n        effect: 'Compendium.pf2e-stances.effects.Unfl4QQURWaX2zfd',\r\n    },\r\n    {\r\n        // Ricochet Stance (Rogue)\r\n        feat: 'Compendium.pf2e.feats-srd.RsNvCSrCN7czHC0G',\r\n        effect: 'Compendium.pf2e-stances.effects.Unfl4QQURWaX2zfd',\r\n    },\r\n    {\r\n        // Rough Terrain Stance\r\n        feat: 'Compendium.pf2e.feats-srd.O0POcPD2aELYTcIK',\r\n        effect: 'Compendium.pf2e-stances.effects.YkiTA74FrUUu5IvI',\r\n    },\r\n    {\r\n        // Shooting Stars Stance\r\n        feat: 'Compendium.pf2e.feats-srd.6cQSPqXoAO6oJl0i',\r\n        effect: 'Compendium.pf2e.feat-effects.RXbfq6oqzVnW6xOV',\r\n    },\r\n    {\r\n        // Six Pillars Stance\r\n        feat: 'Compendium.pf2e.feats-srd.hT0pVPqFuiEsmRb8',\r\n        effect: 'Compendium.pf2e.feat-effects.P80mwvCAEncR2snK',\r\n    },\r\n    {\r\n        // Sky and Heaven Stance\r\n        feat: 'Compendium.pf2e.feats-srd.UjEeHamC2C8JfgJz',\r\n        effect: 'Compendium.pf2e.feat-effects.CQfkyJkRHw4IHWhv',\r\n    },\r\n    {\r\n        // Stoked Flame Stance\r\n        feat: 'Compendium.pf2e.feats-srd.GuEdTz1VMEptQnOd',\r\n        effect: 'Compendium.pf2e.feat-effects.rp1YauUSULuqW8rs',\r\n    },\r\n    {\r\n        // Stumbling Stance\r\n        feat: 'Compendium.pf2e.feats-srd.7FRYyKXDKjGoANYj',\r\n        effect: 'Compendium.pf2e.feat-effects.BCyGDKcplkJiSAKJ',\r\n    },\r\n    {\r\n        // Tangled Forest Stance\r\n        feat: 'Compendium.pf2e.feats-srd.2tUdsoPEnW9yS8so',\r\n        effect: 'Compendium.pf2e.feat-effects.PMHwCrnh9W4sMu5b',\r\n    },\r\n    {\r\n        // Tiger Stance\r\n        feat: 'Compendium.pf2e.feats-srd.VCjAlOvjNvFJOsG5',\r\n        effect: 'Compendium.pf2e.feat-effects.pf9yvKNg6jZLrE30',\r\n    },\r\n    {\r\n        // Twinned Defense (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.xjLbabfyQzBNT4y1',\r\n        effect: 'Compendium.pf2e-stances.effects.3eHMqVx30JGiJqtM',\r\n    },\r\n    {\r\n        // Twinned Defense (Swashbuckler)\r\n        feat: 'Compendium.pf2e.feats-srd.kTRGAST9J9ZxJZ4A',\r\n        effect: 'Compendium.pf2e-stances.effects.3eHMqVx30JGiJqtM',\r\n    },\r\n    {\r\n        // Vitality-Manipulating Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Tj79ePSD212EZjRM',\r\n        effect: 'Compendium.pf2e.feat-effects.h45sUZFs5jhuQdCE',\r\n    },\r\n    {\r\n        // Whirling Blade Stance\r\n        feat: 'Compendium.pf2e.feats-srd.IaiEZaA8erufMUCr',\r\n        effect: 'Compendium.pf2e.feat-effects.JefXqvhzUeBArkAP',\r\n    },\r\n    {\r\n        //  Whirlwind Stance\r\n        feat: 'Compendium.pf2e.feats-srd.wZZyasfIqwiJBQAQ',\r\n        effect: 'Compendium.pf2e-stances.effects.q6UokHWSEcEYWmvh',\r\n    },\r\n    {\r\n        // Wolf Stance\r\n        feat: 'Compendium.pf2e.feats-srd.AN9jY1JVcU20Qdw6',\r\n        effect: 'Compendium.pf2e.feat-effects.b2kWJuCPj1rDMdwz',\r\n    },\r\n]\r\n\r\nconst FEATS: Map<ItemUUID, StanceData> = new Map(STANCES.map(stance => [stance.feat, stance]))\r\nconst EFFECTS: Map<ItemUUID, StanceData> = new Map(STANCES.map(stance => [stance.effect, stance]))\r\n\r\nexport function getStances(actor: CharacterPF2e) {\r\n    const stances: StanceData[] = []\r\n    const replaced: ItemUUID[] = []\r\n    const effects: Map<ItemUUID, string> = new Map()\r\n\r\n    for (const feat of actor.itemTypes.feat) {\r\n        const sourceId = getSourceId(feat)\r\n        const stance = sourceId && FEATS.get(sourceId)\r\n        if (!stance) continue\r\n\r\n        stances.push(stance)\r\n        if (stance.replace) replaced.push(stance.replace)\r\n    }\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = getSourceId(effect)\r\n        if (!sourceId || !EFFECTS.has(sourceId)) continue\r\n        effects.set(sourceId, effect.id)\r\n    }\r\n\r\n    const filtered = stances.filter(stance => !replaced.includes(stance.feat))\r\n\r\n    return filtered\r\n        .map(stance => {\r\n            const feat = fromUuidSync<CompendiumIndexData>(stance.feat)\r\n            const effect = fromUuidSync<CompendiumIndexData>(stance.effect)\r\n            const replace = stance.replace && fromUuidSync<CompendiumIndexData>(stance.replace)\r\n            if (!feat || !effect) return\r\n\r\n            const returned: ReturnedStance = {\r\n                name: replace ? replace.name : feat.name,\r\n                img: effect.img,\r\n                effectID: effects.get(stance.effect) ?? '',\r\n                effectUUID: stance.effect,\r\n            }\r\n\r\n            return returned\r\n        })\r\n        .filter(stance => stance) as ReturnedStance[]\r\n}\r\n\r\nexport function getEffects(actor: CharacterPF2e) {\r\n    const effects = []\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = getSourceId(effect)\r\n        if (!sourceId || !EFFECTS.has(sourceId)) continue\r\n        effects.push({ uuid: sourceId, id: effect.id })\r\n    }\r\n\r\n    return effects\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getEffects, getStances } from './stances'\r\n\r\nexport async function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    await addStances(actor, html)\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] .pf2e-stances .pf2e-stances__stance'\r\n    ).on('click', event => onToggleStance(event, actor))\r\n}\r\n\r\nexport function refreshCharacterSheets(actor: CharacterPF2e) {\r\n    for (const win of Object.values(ui.windows)) {\r\n        if (!(win instanceof ActorSheet)) continue\r\n        if (actor === (win as ActorSheetPF2e).actor) win.render()\r\n    }\r\n}\r\n\r\nasync function onToggleStance(event: JQuery.ClickEvent<any, any, HTMLElement>, actor: CharacterPF2e) {\r\n    const target = event.currentTarget\r\n    const canUseStances = target.closest('.pf2e-stances')?.classList.contains('can-use-stances')\r\n    if (!event.ctrlKey && !canUseStances) return\r\n\r\n    const effectUUID = target.dataset.effectUuid as ItemUUID\r\n    const effects = getEffects(actor)\r\n    const already = effects.findIndex(effect => effect.uuid === effectUUID)\r\n\r\n    let create = false\r\n\r\n    if (already < 0) {\r\n        create = true\r\n    } else if (effects.length) {\r\n        const other = effects.filter(effect => effect.uuid !== effectUUID).length\r\n        const more = effects.filter(effect => effect.uuid === effectUUID).length > 1\r\n        if (other || more) effects.splice(already, 1)\r\n    }\r\n\r\n    if (effects.length) {\r\n        await actor.deleteEmbeddedDocuments(\r\n            'Item',\r\n            effects.map(x => x.id)\r\n        )\r\n    }\r\n\r\n    if (create) {\r\n        const effect = await fromUuid<EffectPF2e>(effectUUID)\r\n        if (effect) {\r\n            const items = (await actor.createEmbeddedDocuments('Item', [effect.toObject()])) as EffectPF2e[]\r\n            items[0]?.toMessage()\r\n        }\r\n    }\r\n}\r\n\r\nasync function addStances(actor: CharacterPF2e, html: JQuery) {\r\n    const stances = getStances(actor).sort((a, b) => a.name.localeCompare(b.name))\r\n    if (!stances.length) return\r\n\r\n    const inCombat = actor.getActiveTokens(true, true).some(token => token.inCombat)\r\n    const tab = html.find('.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter]')\r\n    const options = tab.find('.actions-options')\r\n    const template = await renderTemplate(templatePath('stances.hbs'), {\r\n        stances,\r\n        canUseStances: inCombat && !actor.isDead,\r\n        i18n: localize,\r\n    })\r\n\r\n    if (options.length) options.after(template)\r\n    else tab.prepend(template)\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { refreshCharacterSheets, renderCharacterSheetPF2e } from './sheet'\r\nimport { getEffects } from './stances'\r\n\r\nexport const MODULE_ID = 'pf2e-stances'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.on('deleteCombatant', deleteCombatant)\r\nHooks.on('createCombatant', createCombatant)\r\nHooks.on('deleteCombat', deleteCombat)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nfunction deleteCombat(combat: Combat) {\r\n    for (const combatant of combat.combatants) {\r\n        deleteCombatant(combatant)\r\n    }\r\n}\r\n\r\nfunction deleteCombatant(combatant: Combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (!actor) return\r\n\r\n    const effects = getEffects(actor).map(effect => effect.id)\r\n\r\n    if (effects.length) actor.deleteEmbeddedDocuments('Item', effects)\r\n    else refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction createCombatant(combatant: Combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (actor) refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction getActorFromCombatant(combatant: Combatant) {\r\n    const actor = (combatant as CombatantPF2e).actor\r\n    if (!actor || actor.isToken || !actor.isOfType('character')) return\r\n    else return actor\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n"],"names":["localize","args","key","data","game","i18n","format","getSourceId","doc","getFlag","STANCES","feat","effect","replace","FEATS","Map","map","stance","EFFECTS","getEffects","actor","effects","itemTypes","sourceId","has","push","uuid","id","refreshCharacterSheets","win","Object","values","ui","windows","ActorSheet","render","deleteCombatant","combatant","getActorFromCombatant","length","deleteEmbeddedDocuments","isToken","isOfType","Hooks","on","combat","combatants","async","sheet","html","stances","replaced","get","set","filter","includes","fromUuidSync","name","img","effectID","effectUUID","getStances","sort","a","b","localeCompare","inCombat","getActiveTokens","some","token","tab","find","options","template","renderTemplate","path","x","join","templatePath","canUseStances","isDead","after","prepend","addStances","event","target","currentTarget","closest","classList","contains","ctrlKey","dataset","effectUuid","already","findIndex","create","other","more","splice","fromUuid","items","createEmbeddedDocuments","toObject","toMessage","onToggleStance"],"sourceRoot":""}